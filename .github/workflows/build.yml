name: w몰 홈페이지 자동화
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: 소스코드 체크아웃
        uses: actions/checkout@master

      - name: jdk셋업-temurin17-gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'     # Caching gradle dependencies

      - name: 그래들 빌드
        run: ./gradlew build --no-daemon

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-


      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Inspect builder
        run: |
          echo "Name:           ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:       ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:         ${{ steps.buildx.outputs.status }}"
          echo "Flags:          ${{ steps.buildx.outputs.flags }}"
          echo "Platforms:      ${{ steps.buildx.outputs.platforms }}"

      - name: 이미지 빌드
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: gcahn79/wmall_homepage:latest, gcahn79/wmall_homepage:${{ secrets.APP_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            "APP_VERSION=${{ steps.format-time.outputs.replaced }}"
#            "PROFILE=${{ secrets.PROFILE }}"

      - name: buildx 캐시 이동
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Beanstalk 플러그인을 사용
      # 미리 생성해둔 IAM 인증키를 사용
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: wmall-homepage-dev
          environment_name: wmall-homepage-dev-env
          version_label: "github-action--${{ steps.format-time.outputs.replaced }}"
          region: ap-northeast-2
          deployment_package: Dockerrun.aws.json


      - name: Slack 알림
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Ahn
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
          mention: here
          if_mention: failure, cancelled
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}